-- 定数
local WINDOW_MAX_WIDTH = 640

-- スクロール速度を設定
function init(self)
	self.SCROOL_SPEED = 1
	self.can_move = false
end

-- 雲の移動処理
function update(self, dt)
	if self.can_move == true then
		for i, cloud in ipairs({"cloud_1", "cloud_2"}) do
			local cloud_pos = go.get_position(cloud)
			
			cloud_pos.x = cloud_pos.x - self.SCROOL_SPEED

			-- 雲が画面から消えたら反対側に移動
			if cloud_pos.x == -WINDOW_MAX_WIDTH / 2  then
				cloud_pos.x = -cloud_pos.x + WINDOW_MAX_WIDTH
			end

			go.set_position(cloud_pos, cloud)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_object") then
		if message.action == "start_move" then
			self.can_move = true
		elseif message.action == "stop_move" then
			self.can_move = false
		elseif message.action == "restart_move" then
			self.can_move = true
			
			for i, cloud in ipairs({"cloud_1", "cloud_2"}) do
				local cloud_pos = go.get_position(cloud)

				cloud_pos.x = WINDOW_MAX_WIDTH / 2 + WINDOW_MAX_WIDTH * (i - 1)
				
				go.set_position(cloud_pos, cloud)
			end
		end
	end
end