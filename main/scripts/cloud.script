-- 定数
local WINDOW_MAX_WIDTH = 1920

function init(self)
	-- 雲の移動速度
	self.SCROOL_SPEED = 1
	
	-- 移動可能フラグ
	self.can_move = false

	-- 全雲
	self.all_cloud = {
		"cloud_1",
		"cloud_2"
	}
end

function update(self, dt)
	if self.can_move == true then
		for i, cloud in ipairs(self.all_cloud) do
			local cloud_pos = go.get_position(cloud)

			cloud_pos.x = cloud_pos.x - self.SCROOL_SPEED

			-- 振り出しに戻る
			if cloud_pos.x == -WINDOW_MAX_WIDTH / 2  then
				cloud_pos.x = -cloud_pos.x + WINDOW_MAX_WIDTH
			end

			go.set_position(cloud_pos, cloud)
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("instruction") then
		if message.content == hash("start_move") then
			self.can_move = true
		-- 鳥が死んだ
		elseif message.content == hash("stop_move") then
			self.can_move = false
		elseif message.content == hash("restart_move") then
			self.can_move = true

			for i, cloud in ipairs(self.all_cloud) do
				local cloud_pos = go.get_position(cloud)

				cloud_pos.x = WINDOW_MAX_WIDTH / 2 + WINDOW_MAX_WIDTH * (i - 1)

				go.set_position(cloud_pos, cloud)
			end
		end
	end
end