local GRAVITY = 1.9
local WINDOW_MIN_HEIGHT = 0
local WINDOW_MAX_HEIGHT = 480

-- 入力を受け取るように
function init(self)
	self.HEIGHT = 32
	self.is_alive = true
	self.can_move = false
	self.flying_power = 3.0
end

-- ジャンプと落下処理
function update(self, dt)
	if self.is_alive == true then
		if self.can_move == true then
			self.position = go.get_position("/bird")

			self.position.y = self.position.y + (GRAVITY * self.flying_power)
			if self.position.y < WINDOW_MIN_HEIGHT + self.HEIGHT / 2 then
				self.position.y = WINDOW_MIN_HEIGHT + self.HEIGHT / 2
			elseif self.position.y > WINDOW_MAX_HEIGHT - self.HEIGHT / 2 then
				self.position.y = WINDOW_MAX_HEIGHT - self.HEIGHT / 2
				self.flying_power = 0
			end
			
			go.set_position(self.position, "/bird")
			
			self.flying_power = self.flying_power - 0.1
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_object") then
		if message.action == "start_move" then
			self.can_move = true
		elseif message.action == "stop_move" then
			self.is_alive = false
			self.can_move = false

			msg.post("/bird#bird_image", "play_animation", {id = hash("bird_died")})
		elseif message.action == "restart_move" then
			self.is_alive = true
			self.can_move = true

			self.position = go.get_position("/bird")
			self.position.y = 300

			go.set_position(self.position, "/bird")

			self.flying_power = 3.0
			
			msg.post("/bird#bird_image", "play_animation", {id = hash("flip")})
		elseif message.action == "fly_high" then
			self.flying_power = 3.0
		end
	elseif message_id == hash("trigger_response") then
		if message.group == hash("Object") then
			msg.post("/game_master#game_master", "bird", {status = "death"})
		end
	end
end